# variables
variable_key: param
drop_variables: []
rename_variables: {}

# dimensions
extra_dims: []
drop_dims: []
ensure_dims: []
fixed_dims: []
split_dims: []
rename_dims: {}
dims_as_attrs: []
time_dim_mode: forecast
level_dim_mode: level
squeeze: true

# attributes
attrs_mode: "fixed"
attrs: []
variable_attrs: []
global_attrs: []
rename_attrs: {}

# coordinates
add_valid_time_coord: false
add_geo_coords: true
decode_time: true

# values
flatten_values: false
dtype: float64
array_module: numpy

# other
strict: true
errors: raise


dim_roles:
  ens: number
  date: date
  time: time
  step: step
  forecast_reference_time:
  valid_time:
  level: level
  level_type: typeOfLevel

coord_attrs:
  latitude:
    units: degrees_north
    standard_name: latitude
    long_name: latitude
  longitude:
    units: degrees_east
    standard_name: longitude
    long_name: longitude
  forecast_reference_time:
    # "units": "seconds since 1970-01-01T00:00:00",
    # "calendar": "proleptic_gregorian",
    standard_name: forecast_reference_time
    long_name: initial time of forecast
  step:
    # "units": "hours",
    standard_name: forecast_period
    long_name: time since forecast_reference_time
  valid_time:
    # "units": "seconds since 1970-01-01T00:00:00",
    # "calendar": "proleptic_gregorian",
    standard_name: time
    long_name: valid_time
  level:
    key: typeOfLevel
    isobaricInhPa:
      units: hPa
      positive: down
      stored_direction: decreasing
      standard_name: air_pressure
      long_name: pressure
    isobaricInPa:
      units: Pa
      positive: down
      stored_direction: decreasing
      standard_name: air_pressure
      long_name: pressure
    heightAboveGround:
      units: m
      positive: up
      long_name: height above the surface
      standard_name: height
  levelist:
    key: levtype
    pl:
      units: hPa
      positive: down
      stored_direction: decreasing
      standard_name: air_pressure
      long_name: pressure
